pub fn run5() {
    /*
    クレートはプログラムの構成要素
    ライブラリ，ソースコード，関連するテスト，ツール，設定などすべてがおさめられる
    クレートはバイナリクレート or ライブラリクレート
    バイナリクレートは実行可能，ライブラリクレートはバイナリクレート
    パッケージはクレートの集合，パッケージ>クレート
    cargo new プロジェクト名 でパッケージが作成される
    パッケージに含まえるクレート数はライブラリクレートは0または1個，バイナリクレートは0個以上
    src/main.rsをバイナリクレートとして認識する．
    src/lib.rsをライブラリクレートとして認識する．
    cargo newでは1個のバイナリクレートだけが作成される．
    src/binディレクトリにファイルを億ことで，それぞれのファイルが別のバイナリクレートとして認識される．
    crates.ioから他者のクレートを取得したり自分のクレートを公開できる．
    crates.ioからクレートを取得するには，cargo.tomlの[dependency]にクレート名とバージョンを指定
    cargo runやcargo build時にcreate.ioから取得される
    crates.ioに行って，クレートをcargo.tomlに記載する

     */
    // まず関数の冒頭でクレートの宣言
    use rand::Rng;

    let random_number = rand::random_range(1..101); //現在はこの仕様にはなっていないようだ
    println!("{}", random_number);
    
    println!("Hello");

    /*
    モジュール：クレート内のコードをグループ化して，可読性と再利用性を高める
    Rustの名前空間として使用される
    modキーワードを使用して作成する
    基本的には1ファイル1モジュールとするのが基本だが肥大化してきたら複数ファイルにする
    public 要素がモジュールの外部からアクセス可能，private モジュール内もしくはそのその子モジュールのみからアクセス可能
     */

}
